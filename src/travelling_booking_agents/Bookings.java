 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package travelling_booking_agents;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author Dell
 */
public class Bookings extends javax.swing.JFrame {

    /**
     * Creates new form Bookings
     */
    public Bookings() {
        initComponents();
    }

    private static final String username ="root"; 
   private static final String password ="Campmake96"; 
   private static final String dataconnect ="jdbc:mysql://localhost:3306/travel_booking_system"; 
   
    Connection connect = null;
    PreparedStatement pst =null;
    ResultSet rs = null;
    int q ,i;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        DeparturePoint = new javax.swing.JComboBox<>();
        Destination = new javax.swing.JComboBox<>();
        Accomodation = new javax.swing.JComboBox<>();
        AirportTax = new javax.swing.JRadioButton();
        Luggage = new javax.swing.JRadioButton();
        Insurance = new javax.swing.JRadioButton();
        AirMiles = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        FlightStandard = new javax.swing.JRadioButton();
        FlightEconomy = new javax.swing.JRadioButton();
        TicketReturn = new javax.swing.JRadioButton();
        ChildYes = new javax.swing.JRadioButton();
        FlightFirstClass = new javax.swing.JRadioButton();
        AdultYes = new javax.swing.JRadioButton();
        TicketSingle = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        FirstName1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        Surname1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        Postal_Code1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        Address1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        Telephone1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        Email1 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        Subtotal = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        Tax = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        Total = new javax.swing.JTextField();
        TotalButton = new javax.swing.JButton();
        ResetButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        textArea1 = new java.awt.TextArea();
        Recept = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Travel Management System");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));
        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 0, 153), 1, true));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Departure Point :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Destination");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Accomodation :");

        DeparturePoint.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        DeparturePoint.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "OR Tambo", "Cape Town", "King Shaka", "Lanseria", "Bram Fischer", "Kruger Mpumalanga" }));

        Destination.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Destination.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "OR Tambo", "Cape Town", "King Shaka", "Lanseria", "Bram Fischer", "Kruger Mpumalanga" }));

        Accomodation.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Accomodation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Single", "Double", "Extra" }));

        AirportTax.setText("Airport Tax Paid ");
        AirportTax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AirportTaxActionPerformed(evt);
            }
        });

        Luggage.setText("Ext Luggage");
        Luggage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LuggageActionPerformed(evt);
            }
        });

        Insurance.setText("Travelling Insurance Paid");
        Insurance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsuranceActionPerformed(evt);
            }
        });

        AirMiles.setText("Air Miles Over 20000");
        AirMiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AirMilesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Accomodation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DeparturePoint, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Destination, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AirportTax)
                            .addComponent(Insurance))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AirMiles)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(Luggage)
                                .addGap(10, 10, 10)))
                        .addGap(15, 15, 15)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeparturePoint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Destination, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Accomodation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AirportTax)
                    .addComponent(AirMiles))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Insurance)
                    .addComponent(Luggage))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));
        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 0, 153), 1, true));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Flight");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Ticket");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Adult");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Child");

        FlightStandard.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        FlightStandard.setText("Standard");
        FlightStandard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlightStandardActionPerformed(evt);
            }
        });

        FlightEconomy.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        FlightEconomy.setText("Economy ");
        FlightEconomy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlightEconomyActionPerformed(evt);
            }
        });

        TicketReturn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TicketReturn.setText("Return");
        TicketReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TicketReturnActionPerformed(evt);
            }
        });

        ChildYes.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ChildYes.setText("Yes");
        ChildYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChildYesActionPerformed(evt);
            }
        });

        FlightFirstClass.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        FlightFirstClass.setText("First Class");
        FlightFirstClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FlightFirstClassActionPerformed(evt);
            }
        });

        AdultYes.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AdultYes.setText("Yes");
        AdultYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdultYesActionPerformed(evt);
            }
        });

        TicketSingle.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TicketSingle.setText("Single");
        TicketSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TicketSingleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(74, 74, 74)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AdultYes)
                            .addComponent(jLabel10)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FlightStandard)
                            .addComponent(FlightEconomy)
                            .addComponent(FlightFirstClass))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TicketReturn)
                            .addComponent(TicketSingle))
                        .addGap(86, 86, 86)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChildYes))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FlightStandard)
                    .addComponent(TicketSingle)
                    .addComponent(AdultYes)
                    .addComponent(ChildYes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TicketReturn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(FlightEconomy, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(FlightFirstClass)
                .addGap(39, 39, 39))
        );

        jPanel7.setBackground(new java.awt.Color(153, 153, 153));
        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 0, 153), 1, true));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("First Name: ");

        FirstName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstName1ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Surname:");

        Surname1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Surname1ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Postal Code:");

        Postal_Code1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Postal_Code1ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setText("Address:");

        Address1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Address1ActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("Telephone:");

        Telephone1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Telephone1ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("Email:");

        Email1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Email1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addComponent(Address1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(Postal_Code1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Telephone1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addComponent(Email1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Surname1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FirstName1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FirstName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Surname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Address1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Postal_Code1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Telephone1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Email1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(153, 153, 153));
        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 0, 153), 1, true));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("Sub Total :R");

        Subtotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubtotalActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Tax     :      R");

        Tax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TaxActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Total  :      R");

        Total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalActionPerformed(evt);
            }
        });

        TotalButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TotalButton.setText("Total ");
        TotalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TotalButtonActionPerformed(evt);
            }
        });

        ResetButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ResetButton.setText("Reset");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Tax, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TotalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Subtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TotalButton)
                    .addComponent(ResetButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Receipt");

        Recept.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Recept.setText("Reciept");
        Recept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReceptActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(textArea1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Recept)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(43, 43, 43))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Recept)
                            .addComponent(jButton1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TicketReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TicketReturnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TicketReturnActionPerformed

    private void ChildYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChildYesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChildYesActionPerformed

    private void AdultYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdultYesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AdultYesActionPerformed

    private void TicketSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TicketSingleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TicketSingleActionPerformed

    private void FirstName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstName1ActionPerformed

    private void Surname1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Surname1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Surname1ActionPerformed

    private void Postal_Code1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Postal_Code1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Postal_Code1ActionPerformed

    private void Address1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Address1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Address1ActionPerformed

    private void Telephone1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Telephone1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Telephone1ActionPerformed

    private void Email1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Email1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Email1ActionPerformed

    private void AirportTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AirportTaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AirportTaxActionPerformed

    private void LuggageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LuggageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LuggageActionPerformed

    private void InsuranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsuranceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InsuranceActionPerformed

    private void AirMilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AirMilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AirMilesActionPerformed

    private void SubtotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubtotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SubtotalActionPerformed

    private void TaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TaxActionPerformed

    private void TotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TotalActionPerformed

    private void TotalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TotalButtonActionPerformed
     //Creating prices 
     double FlightStand =130.00 ,FlightEco =150.00 ,FlightFClass =210.00;
     double Tax =4.5,Miles =56.00 ,Insu =6.6 ,Lugga=50.00;
     double single =320.00 ,doub =350.00 ,extra =400.00;
     double ORTambo= 260.00 ,CapeTown=300.00 ,KingShaka =320.00 ,Lanseria = 430.00 ,BramFischer =220.00 ,Kruger =330.00;
     double Travel_Cost[] = new double[20];
     double iTax =4.5;
     //Calculations for OR Tambo
     
     if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Single") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = ORTambo +single + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Single") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = ORTambo +single + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Single") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = ORTambo +single + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Single") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = ORTambo +single + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Single")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = ORTambo +single + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     
     
     
     
     
     //OrTambo Double------------------------------------------------------------------------------------------------------
     if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Double") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = ORTambo +doub + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Double") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = ORTambo +doub + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Double") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = ORTambo +doub + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("double") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = ORTambo +doub + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Double")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = ORTambo +doub + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     //Or Tambo Extra------------------------------------------------------------------------------------------------------
     if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Extra") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = ORTambo +extra + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Extra") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = ORTambo +extra + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Extra") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = ORTambo +extra + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Extra") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = ORTambo +extra + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("OR Tambo")&& 
             Accomodation.getSelectedItem().equals("Extra")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = ORTambo +extra + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     }
     
     
     
     //Calculation for Capetown-------------------------------------------------------
     
          
     
     if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Single") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = CapeTown +single + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Single") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = CapeTown +single + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Single") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = CapeTown +single + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Single") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = CapeTown +single + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Single")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = CapeTown +single + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     
     
     
     
     
     //Capetown Double------------------------------------------------------------------------------------------------------
     if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Double") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = CapeTown +doub + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Double") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = CapeTown +doub + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Double") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = CapeTown +doub + FlightStand + Tax +Miles;
    Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("double") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = CapeTown +doub + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Double")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = CapeTown +doub + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
          //Cape Town Extra------------------------------------------------------------------------------------------------------
     if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Extra") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = CapeTown +extra + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Extra") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = CapeTown +extra + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Extra") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = CapeTown +extra + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Extra") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = CapeTown +extra + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Cape Town")&& 
             Accomodation.getSelectedItem().equals("Extra")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = CapeTown +extra + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     }
     
     
     
     //Creating KingShaka============================================================================
       
     
          
     
     if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Single") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = KingShaka +single + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Single") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = KingShaka +single + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Single") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = KingShaka +single + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Single") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = KingShaka +single + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Single")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = KingShaka +single + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     
     
     
     
     
     //KingShaka Double------------------------------------------------------------------------------------------------------
     if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Double") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = KingShaka +doub + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Double") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = KingShaka +doub + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Double") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = KingShaka +doub + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("double") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = KingShaka +doub + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Double")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = KingShaka +doub + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
         //king Shaka Extra------------------------------------------------------------------------------------------------------
     if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Extra") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = KingShaka +extra + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Extra") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = KingShaka +extra + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Extra") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = KingShaka +extra + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Extra") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = KingShaka +extra + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("King Shaka")&& 
             Accomodation.getSelectedItem().equals("Extra")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = KingShaka +extra + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     }
     
     //Calculation for Lanseria=================================================================================
     
          
     
          
     
     if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Single") && FlightStandard.isSelected())
     {
     Travel_Cost[0] =Lanseria +single + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Single") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = Lanseria +single + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Single") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = Lanseria +single + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Single") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = Lanseria +single + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Single")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = Lanseria +single + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     
     
     
     
     
     //Lanseria Double------------------------------------------------------------------------------------------------------
     if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Double") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = Lanseria +doub + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Double") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = Lanseria +doub + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Double") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = Lanseria +doub + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("double") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = Lanseria +doub + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Double")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = Lanseria +doub + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
    //Lanseria Extra------------------------------------------------------------------------------------------------------
     if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Extra") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = Lanseria +extra + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Extra") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = Lanseria +extra + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Extra") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = Lanseria +extra + FlightStand + Tax +Miles;
    Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Extra") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = Lanseria +extra + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Lanseria")&& 
             Accomodation.getSelectedItem().equals("Extra")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = Lanseria +extra + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     }
     //Calculations for Bram Fischer ========================================================================
     
     
     
          
     
     if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Single") && FlightStandard.isSelected())
     {
     Travel_Cost[0] =BramFischer +single + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Single") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = BramFischer +single + FlightStand + Tax;
    Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Single") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = BramFischer +single + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Single") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = BramFischer +single + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Single")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = BramFischer +single + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     
     
     
     
     
     //Bram fischer  Double------------------------------------------------------------------------------------------------------
     if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Double") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = BramFischer +doub + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Double") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = BramFischer +doub + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Double") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = BramFischer +doub + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("double") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = BramFischer +doub + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Double")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = BramFischer +doub + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
          //Bram Fischer Extra------------------------------------------------------------------------------------------------------
     if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Extra") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = BramFischer +extra + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Extra") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = BramFischer +extra + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Extra") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = BramFischer +extra + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Extra") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = BramFischer +extra + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Bram Fischer")&& 
             Accomodation.getSelectedItem().equals("Extra")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = BramFischer +extra + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     }
 
    //Calculation for Kruger Mpumalanga
              
     
     if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Single") && FlightStandard.isSelected())
     {
     Travel_Cost[0] =Kruger +single + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Single") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = Kruger +single + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Single") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = Kruger +single + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Single") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = Kruger +single + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Single")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = Kruger +single + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     
     
     
     
     
     //Kruger Double------------------------------------------------------------------------------------------------------
     if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Double") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = Kruger +doub + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Double") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = Kruger +doub + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Double") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = Kruger +doub + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("double") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = Kruger +doub + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Double")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = Kruger +doub + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     //Kruger Extra------------------------------------------------------------------------------------------------------
     if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Extra") && FlightStandard.isSelected())
     {
     Travel_Cost[0] = Kruger +extra + FlightStand;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Extra") && FlightStandard.isSelected()&& AirportTax.isSelected() )
     {
     Travel_Cost[0] = Kruger +extra + FlightStand + Tax;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Extra") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected() )
     {
     Travel_Cost[0] = Kruger +extra + FlightStand + Tax +Miles;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
      else if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Extra") &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected())
     {
     Travel_Cost[0] = Kruger +extra + FlightStand + Tax +Miles + Insu;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     else if(Destination.getSelectedItem().equals("Kruger Mpumalanga")&& 
             Accomodation.getSelectedItem().equals("Extra")  &&
              FlightStandard.isSelected()&& AirportTax.isSelected()&& AirMiles.isSelected()
              && Insurance.isSelected() && Luggage.isSelected())
     {
     Travel_Cost[0] = Kruger +extra + FlightStand + Tax +Miles + Insu +Lugga;
     Travel_Cost[1] = (Travel_Cost[0] * iTax/100);
     String Tx = String.format("R%.2f", Travel_Cost[1]);
     
     this.Tax.setText(Tx);
     
     String SubTotal = String.format("R%.2f", Travel_Cost[0]);
     Subtotal.setText(SubTotal);
     
     String Total = String.format("R%.2f", Travel_Cost[1] + Travel_Cost[0]);
     this.Total.setText(Total);
     } 
     
     
     //Working on the radio buttons  for Flight
     String flight ="";
     if(FlightStandard.isSelected())
     {
     flight ="Standard";
     }else if(FlightEconomy.isSelected())
     {
     flight ="Economy";
     }else if(FlightFirstClass.isSelected())
     {
     flight ="First Class";
     }
     
     
     //Working on the Tickey Radio Button
     String Tick ="";
     if (TicketSingle.isSelected())
     {
     Tick = "Single";
     }else if (TicketReturn.isSelected())
     {
     Tick ="Return";
     }
     
     //Working on the other parts
     String AT ="";
     if(AirportTax.isSelected())
     {
      AT ="Airport Tax";
     }
     String AM ="";
     if(AirMiles.isSelected())
     {
     AM = "Air Miles Over 20000";
     }
     String in ="";
     if(Insurance.isSelected())
     {
     in ="Insurance";
     }
     
     String lu ="";
     if(Luggage.isSelected())
     {
     lu ="Extra Luggage";
     }
     
     //Age
     String age ="";
     if(AdultYes.isSelected())
     {
      age ="yes";
     }
     else if(ChildYes.isSelected()){
     age ="yes";
     }
     //Saving in the database
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connect =DriverManager.getConnection(dataconnect ,username ,password);
            pst =connect.prepareStatement("insert into bookings (FName, Surname, Address, PostalCode, Telephone, Email, Flight, Ticket, Age, Departure, Destiny, Accomodation, Tax, Travel, AirMiles, ExtLanguage, Total) value(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

            pst.setString(1, FirstName1.getText());
            pst.setString(2, Surname1.getText());
            pst.setString(3, Address1.getText());
            pst.setString(4, Postal_Code1.getText());
            pst.setString(5, Telephone1.getText());
            pst.setString(6, Email1.getText());
            pst.setString(7, flight);
            pst.setString(8, Tick);
            pst.setString(9, age);
            pst.setString(10, DeparturePoint.getSelectedItem().toString());
            pst.setString(11, Destination.getSelectedItem().toString());
            pst.setString(12, Accomodation.getSelectedItem().toString());
            pst.setString(13, AT);
            pst.setString(14, AM);
            pst.setString(15, in);
            pst.setString(16, lu);
            pst.setString(17,Total.getText());
            
           

            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "You have successfully  booked your flight");
            

           
            
            

        }catch(Exception ex)
        {
            System.out.println(ex);

        }
        
    }//GEN-LAST:event_TotalButtonActionPerformed

    private void FlightFirstClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlightFirstClassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FlightFirstClassActionPerformed

    private void FlightEconomyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlightEconomyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FlightEconomyActionPerformed

    private void FlightStandardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FlightStandardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FlightStandardActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        FirstName1.setText("");
        Surname1.setText("");
        Address1.setText("");
        Postal_Code1.setText("");
        Telephone1.setText("");
        Email1.setText("");
        
        FlightStandard.setActionCommand("");
        FlightEconomy.setActionCommand("");
        FlightFirstClass.setActionCommand("");
        TicketSingle.setActionCommand("");
        TicketReturn.setActionCommand("");
        AdultYes.setActionCommand("");
        ChildYes.setActionCommand("");
        DeparturePoint.setSelectedItem("");
        Destination.setSelectedItem("");
        Accomodation.setSelectedItem("");
        AirMiles.setActionCommand("");
        AirportTax.setActionCommand("");
        Insurance.setActionCommand("");
        Luggage.setActionCommand("");
        
        Subtotal.setText("");
        Tax.setText("");
        Total.setText("");
        
        
        
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Bookings tf = new Bookings();
        tf.setVisible(false);
        LogIn L = new LogIn();
        L.setVisible(true
        );
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ReceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReceptActionPerformed
        try
    {
        Class.forName("com.mysql.cj.jdbc.Driver");
        connect =DriverManager.getConnection(dataconnect ,username ,password);
        pst =connect.prepareStatement("Select * from bookings");
        rs = pst.executeQuery();
        java.sql.ResultSetMetaData stdata = rs.getMetaData();
         q = stdata.getColumnCount();
        
        while(rs.next())
        {
        Vector columbaData = new Vector();
        
        
      
        for(i =1;i <=q ;i++)
        {
           
textArea1.setText("=====================Airport========================="
        +"\n Name : "+rs.getString("FName") +"\n Surname :"+rs.getString("Surname")
+"\nAddress : "+rs.getString("Address") +"\nPostal Code : "+rs.getString("PostalCode")
        
 +"\nTelephone : "+rs.getString("Telephone") +"\nEmail :"+rs.getString("Email")
 +"\n==================================================================================="
+"\nFlight : "+rs.getString("Flight") +"\nTicket "+rs.getString("Ticket")
+"\nAge : "+rs.getString("Age")
 +"\n==================================================================================="
 +"\nDeparture : "+rs.getString("Departure") +"\nDestined : "+rs.getString("Destiny")
        
 +"\nAccomodation : "+rs.getString("Accomodation") +"\nAdditional Cost :"+rs.getString("Tax") +","+rs.getString("Travel")
        +","+rs.getString("AirMiles") +","+rs.getString("ExtLanguage")
 +"\n==================================================================================="
+"\nTotal : R"+rs.getString("Total"));
        
            
        
        
        }

        
        
        }
        
        
    }  catch (Exception ex) {
           JOptionPane.showMessageDialog(null, ex);
       }
    
    }//GEN-LAST:event_ReceptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bookings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bookings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Accomodation;
    private javax.swing.JTextField Address1;
    private javax.swing.JRadioButton AdultYes;
    private javax.swing.JRadioButton AirMiles;
    private javax.swing.JRadioButton AirportTax;
    private javax.swing.JRadioButton ChildYes;
    private javax.swing.JComboBox<String> DeparturePoint;
    private javax.swing.JComboBox<String> Destination;
    private javax.swing.JTextField Email1;
    private javax.swing.JTextField FirstName1;
    private javax.swing.JRadioButton FlightEconomy;
    private javax.swing.JRadioButton FlightFirstClass;
    private javax.swing.JRadioButton FlightStandard;
    private javax.swing.JRadioButton Insurance;
    private javax.swing.JRadioButton Luggage;
    private javax.swing.JTextField Postal_Code1;
    private javax.swing.JButton Recept;
    private javax.swing.JButton ResetButton;
    private javax.swing.JTextField Subtotal;
    private javax.swing.JTextField Surname1;
    private javax.swing.JTextField Tax;
    private javax.swing.JTextField Telephone1;
    private javax.swing.JRadioButton TicketReturn;
    private javax.swing.JRadioButton TicketSingle;
    private javax.swing.JTextField Total;
    private javax.swing.JButton TotalButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField jTextField1;
    private java.awt.TextArea textArea1;
    // End of variables declaration//GEN-END:variables
}
